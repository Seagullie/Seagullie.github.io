{"version":3,"sources":["actions/stateActions.js","components/about__pics/seagull.png","components/Calculator.js","components/TTT-svgs/circle.svg","components/TTT-svgs/close.svg","components/Home.js","todo-app/Todos.js","todo-app/AddTodoForm.js","todo-app/App.js","components/About.js","components/tic-tac-toe.js","App.js","serviceWorker.js","reducers/rootReducer.js","index.js"],"names":["saveState","componentName","componentState","type","module","exports","Calculator","state","inputData","output","lastOperationSuccessful","operators","editInputScreen","clickEvent","char","target","innerText","handleEquals","includes","setState","expression","replace","calculation","eval","error","console","deleteInput","updatedInput","trimEnd","slice","componentDidMount","props","calculatorState","componentWillUnmount","id","className","style","borderColor","this","value","readOnly","disabled","onClick","Component","mapStateToProps","mapDispatchToProps","dispatch","connect","Home","mounted","redirectToAbout","log","history","push","exact","to","class","withRouter","Todos","todos","centralStorageRemover","todoHTML","map","todo","ghostTodo","content","key","formatTodo","length","AddTodoForm","contentIsNotNull","handleChange","e","document","querySelector","updateGhostTodo","handleSubmit","preventDefault","centralStorageAdder","onSubmit","onChange","htmlFor","App","addTodo","Math","random","expandedTodos","deleteTodo","filteredTodos","filter","gTodoText","gTodo","updatedTodos","todoState","About","src","Seagull","TTT","axisLen","generateInitialState","winner","turn","axisLength","field","Array","el","fill","victoryPath","players","fieldSizeLimitations","min","max","createRows","i","createCells","rowIndex","parseInt","colIndex","row","col","String","circle","close","handleClick","coords","locateTarget","classList","contains","updateField","getAttribute","gameEnd","isGameEnd","onGameEnd","isUniformAndComplete","transposedField","transpose","backslashDiag","diag","slashDiag","getAntiDiagonal","increaseFieldSize","decreaseFieldSize","ticTacToeState","player","newField","textToAppend","element","rate","timeForOneAppend","theString","from","forEach","setTimeout","smoothRewrite","array","firstEl","undefined","isUniform","isIncomplete","matrix","antiDiag","gridTemplateColumns","gridTemplateRows","href","title","Todo","MainApp","data-badge-caption","path","component","Boolean","window","location","hostname","match","initState","dummyData","rootReducer","action","store","createStore","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.d5c60ee2.chunk.js","sourcesContent":["export const saveState = (componentName, componentState) => {\r\n    return {\r\n        type: 'SAVE_STATE',\r\n        componentName,\r\n        componentState\r\n    }\r\n}","module.exports = __webpack_public_path__ + \"static/media/seagull.fd9df25f.png\";","import React, {Component} from 'react'\r\nimport './Calculator.css'\r\nimport {connect} from 'react-redux'\r\nimport {saveState} from '../actions/stateActions'\r\n\r\nclass Calculator extends Component{\r\n\r\n    state = {\r\n        inputData: \"3 + 4\",\r\n        output: \"\",\r\n        lastOperationSuccessful: true\r\n    }\r\n\r\n    operators = [\"+\", \"-\", \"×\", \"/\"]\r\n\r\n    editInputScreen = (clickEvent) => {\r\n        \r\n        let char = clickEvent.target.innerText\r\n\r\n        if (char === \"=\"){\r\n            return this.handleEquals()\r\n        }\r\n\r\n        if (this.operators.includes(char)) char = \" \" + char + \" \"\r\n        this.setState({\r\n            inputData: this.state.inputData + char \r\n        })\r\n\r\n    }\r\n\r\n    handleEquals = () => {\r\n        let expression = this.state.inputData\r\n        expression = expression.replace(\"×\", \"*\")\r\n\r\n        let lastOperationSuccessful, calculation = null;\r\n\r\n        try{\r\n            calculation = eval(expression)\r\n            lastOperationSuccessful = true\r\n        }\r\n        catch (error){\r\n            lastOperationSuccessful = false\r\n            calculation = \"Something went wrong\"\r\n            console.error(error)\r\n        }\r\n        \r\n        this.setState({\r\n            inputData: \"\",\r\n            output: calculation,\r\n            lastOperationSuccessful\r\n        })\r\n    }\r\n\r\n    deleteInput = () => {\r\n        let updatedInput = this.state.inputData.trimEnd()\r\n        updatedInput = updatedInput.slice(0, -1)\r\n        updatedInput = updatedInput.trimEnd()\r\n        this.setState({\r\n            inputData: updatedInput\r\n        })\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setState({\r\n            ...this.props.calculatorState\r\n        })\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this.props.saveState(this.state)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div id=\"calculator\">               \r\n    <div id=\"calcHeader\"><h3 className=\"blue-text\">Calculator</h3></div>\r\n    <div id=\"calcBody\" className=\"card grey lighten-4\">\r\n        <div id=\"screen\" className=\"card-title\" style = {{borderColor: (this.state.lastOperationSuccessful? \"#2196F3\" : \"#ee6e73\")}}>\r\n            <input type=\"text\" value={this.state.inputData} readOnly disabled/><div className=\"right\"><i onClick = {this.deleteInput} className=\"material-icons right\" id=\"deleteButton\">backspace</i></div></div>\r\n        <div id=\"panel\" className=\"card-content\">\r\n        <div id=\"notification\" className={this.state.lastOperationSuccessful ? \"blue-text\": \"red-text\"}>{this.state.output}</div>\r\n            <div id=\"numbers\" onClick = {this.editInputScreen}>\r\n                    <div className=\"gridCell main\" >1</div>\r\n                    <div className=\"gridCell main\">2</div>\r\n                    <div className=\"gridCell main\">3</div>\r\n            \r\n                    <div className=\"gridCell main\">4</div>\r\n                    <div className=\"gridCell main\">5</div>\r\n                    <div className=\"gridCell main\">6</div>\r\n                \r\n                    <div className=\"gridCell main\">7</div>\r\n                    <div className=\"gridCell main\">8</div>\r\n                    <div className=\"gridCell main\">9</div>\r\n                \r\n                    <div className=\"gridCell\">.</div>\r\n                    <div className=\"gridCell\">0</div>\r\n                    <div id=\"equalsSign\" className=\"gridCell\">=</div>\r\n            </div>\r\n            <div id=\"operators\" onClick = {this.editInputScreen}>\r\n                    <div className=\"gridCell\">+</div>\r\n                    <div className=\"gridCell\">-</div>\r\n                    <div className=\"gridCell\">×</div>\r\n                    <div className=\"gridCell\">/</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        calculatorState: state.calculatorState\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        saveState: (state) => {dispatch(saveState('calculator', state))}\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Calculator)","module.exports = __webpack_public_path__ + \"static/media/circle.63f7009e.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.da839189.svg\";","import React from 'react';\r\nimport { Component } from \"react\";\r\nimport './Home.css'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nclass Home extends Component {\r\n\r\n    mounted = false;\r\n\r\n    redirectToAbout = () => {\r\n        console.log(this.props)\r\n        if (this.mounted) this.props.history.push('/about')\r\n      }\r\n    \r\n    componentDidMount = () => {\r\n        // setTimeout(this.redirectToAbout, 45000);\r\n        this.mounted = true\r\n      }\r\n\r\n    componentWillUnmount = () => {\r\n        this.mounted = false\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <ul className=\"collection with-header\" id=\"home\">\r\n            <li className=\"collection-header red-text text-darken-3 center\"><h5>Table Of Contents</h5></li> \r\n            <a className=\"collection-item blue-text\"><NavLink exact to=\"/\"><h6 class=\"valign-wrapper\">Home<i class=\"material-icons\">arrow_forward</i></h6></NavLink></a>\r\n            <a className=\"collection-item blue-text\"><NavLink to=\"/todo\"><h6 class=\"valign-wrapper\">ToDo List<i class=\"material-icons\">arrow_forward</i></h6></NavLink></a>\r\n            <a className=\"collection-item blue-text\"><NavLink to=\"/calculator\"><h6 class=\"valign-wrapper\">Calculator<i class=\"material-icons\">arrow_forward</i></h6></NavLink></a>\r\n            <a className=\"collection-item blue-text\"><NavLink to=\"/tic-tac-toe\"><h6 class=\"valign-wrapper\">Tic Tac Toe<i class=\"material-icons\">arrow_forward</i></h6></NavLink></a>\r\n            <a className=\"collection-item blue-text\"><NavLink to=\"/about\"><h6 class=\"valign-wrapper\">About<i class=\"material-icons\">arrow_forward</i></h6></NavLink></a>\r\n        </ul>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(Home)","import React from 'react';\r\nimport './Todos.css'\r\n\r\nconst formatTodo = (todo, centralStorageRemover) => {\r\n    return (\r\n        <div className = {\"todo collection-item \" + (todo.ghostTodo ? \"ghost-task\": \"\") + (!todo.content? \" hide\": \"\")}\r\n            key={todo.id}\r\n            onClick = {() => centralStorageRemover(todo.id)}>\r\n        {todo.content}\r\n    </div>\r\n    )\r\n}\r\n\r\nconst Todos = ({todos, centralStorageRemover}) => {\r\n    let todoHTML = todos.map(todo => {\r\n        return formatTodo(todo, centralStorageRemover)\r\n    })\r\n\r\n    // i want to make ghost todo that gets updated as user types in input\r\n    // and tranforms into actual todo after user submits todo\r\n\r\n    if (todoHTML.length === 1 && !todos[0].content){ // only ghost left \r\n        todoHTML = <div className=\"container center\"><p>Good Job! No todos for now!</p></div>\r\n    }\r\n    return (\r\n        <div className = \"todos collection\">\r\n            {todoHTML}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Todos","import React, {Component} from 'react';\r\n\r\n\r\nclass AddTodoForm extends Component{\r\n    state = {\r\n        content: \"\",\r\n        contentIsNotNull: false\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            content: e.target.value,\r\n            contentIsNotNull: document.querySelector('form input').value !== \"\"\r\n        })\r\n\r\n        this.props.updateGhostTodo(e.target.value)\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log(this.state)\r\n        this.props.centralStorageAdder(this.state)\r\n\r\n        this.setState({\r\n            content: \"\",\r\n            contentIsNotNull: false\r\n        })\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"input-field\">\r\n                        <input type=\"text\" id=\"todoInput\" onChange={this.handleChange} value={this.state.content}></input>\r\n                        <label htmlFor=\"todoInput\" className = {this.state.contentIsNotNull? \"active\":\"\"}>Add new todo</label>\r\n                    </div>    \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default AddTodoForm","import React, {Component} from 'react';\r\nimport Todos from './Todos'\r\nimport AddTodoForm from './AddTodoForm'\r\nimport {connect} from 'react-redux'\r\nimport {saveState} from '../actions/stateActions'\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    todos: [\r\n      {id: 1, content: \"buy milk\"},\r\n      {id: 2, content: \"take out garbage\"},\r\n      {id: 3, content: \"finish homework\"},\r\n      {id: \"ghost\", content: \"\", ghostTodo: true},\r\n    ]\r\n  }\r\n\r\n  ghostTodo = {id: \"ghost\", content: \"\", ghostTodo: true}\r\n\r\n  addTodo = (todo) => {\r\n    todo.id = Math.random()\r\n    let expandedTodos = [...this.state.todos.slice(0, -1), todo, this.ghostTodo]\r\n\r\n    this.setState(\r\n      {\r\n        todos: expandedTodos\r\n      }\r\n    )\r\n  }\r\n\r\n  deleteTodo = (id) => {\r\n    if (id === \"ghost\") return\r\n\r\n    let filteredTodos = this.state.todos.filter(todo => todo.id !== id)\r\n\r\n    this.setState({\r\n      todos: filteredTodos\r\n    })\r\n  }\r\n\r\n  updateGhostTodo = (gTodoText) => {\r\n    let gTodo = {...this.ghostTodo, content: gTodoText}\r\n    let updatedTodos = this.state.todos.map(todo => {return (todo.ghostTodo ? gTodo : todo)})\r\n    \r\n    this.setState({\r\n      todos: updatedTodos\r\n    })\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.setState({\r\n      ...this.props.todoState\r\n    })\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    this.props.saveState(this.state)\r\n  }\r\n\r\n  render(){\r\n    console.log(this.props) // that's how you extract stuff from central storage\r\n    // i'm also interested in updating central storage\r\n    return (\r\n    <div>\r\n      <h1 className = \"center blue-text\">Todos</h1>\r\n      <Todos centralStorageRemover = {this.deleteTodo} todos = {this.state.todos}/>\r\n      <AddTodoForm updateGhostTodo = {this.updateGhostTodo} centralStorageAdder = {this.addTodo} />\r\n    </div>\r\n  );\r\n  } \r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => { // state of central storage\r\n  return {\r\n    todoState: state.todoState\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    saveState: (state) => {dispatch(saveState('todo', state))}\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React from 'react';\r\nimport {Component} from \"react\"\r\nimport  Seagull from './about__pics/seagull.png'\r\n\r\nclass About extends Component{\r\n    render(){\r\n        return(\r\n            <p><img className=\"responsive-img\" src={Seagull} /> <br/> Lorem Ipsum and stuff...</p>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default About","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {saveState} from '../actions/stateActions'\r\n\r\nimport './tic-tac-toe.css'\r\nimport circle from './TTT-svgs/circle.svg'\r\nimport close from './TTT-svgs/close.svg'\r\nimport {transpose, diag} from 'mathjs'\r\n\r\n\r\n\r\nfunction smoothRewrite(textToAppend, element, rate = 10){\r\n    // 10 appends per second\r\n    let timeForOneAppend = 1 / rate // in miliseconds\r\n    let theString = textToAppend\r\n    textToAppend = Array.from(textToAppend)\r\n\r\n    textToAppend.forEach((char, i) => setTimeout(() => element.innerText = theString.slice(0, i + 1), timeForOneAppend * i * 1000))\r\n}\r\n\r\nclass TTT extends Component {\r\n\r\n    axisLen = 3\r\n\r\n    generateInitialState = (axisLen) => {\r\n        return {\r\n            \r\n                winner: \"no one\",\r\n                turn: 1,\r\n                axisLength: axisLen, // default val\r\n                field: [...(Array(axisLen))].map(el => new Array(axisLen).fill(null)),\r\n                victoryPath: []\r\n        }\r\n    }\r\n\r\n    state = this.generateInitialState(3)\r\n \r\n    players = [\"cross\", \"circle\"]\r\n    fieldSizeLimitations = {\r\n        min: 3, \r\n        max: 5\r\n    }\r\n    \r\n    createRows = () => {\r\n        let rows =  [...Array(this.state.axisLength)].map((el, i) => {return(\r\n            <div className=\"gridRow\" key={i}>\r\n                    {this.createCells(i)}\r\n            </div>)\r\n        } )\r\n\r\n        return rows\r\n    }\r\n\r\n    createCells = (rowIndex) => {\r\n        \r\n        let field = this.state.field\r\n        let winner = this.state.winner\r\n        let cols =  [...Array(this.state.axisLength ** 2)].map((el, i) => {\r\n            let rowIndex = parseInt(i / this.state.axisLength)\r\n            let colIndex = i % this.state.axisLength \r\n            return(\r\n        <div className={\"gridCell \" + (field[rowIndex][colIndex] == winner ? \"blue lighten-3\": \"\")}\r\n        row = {rowIndex} col={colIndex} key = {new String(rowIndex) + colIndex}>\r\n            {field[rowIndex][colIndex] ? <img src={field[rowIndex][colIndex] == \"circle\"? circle: close} /> : null }\r\n        </div>)\r\n        } )\r\n\r\n        return cols\r\n    }\r\n    \r\n    handleClick = (e) => {\r\n        let target = e.target\r\n        let coords = this.locateTarget(target)\r\n\r\n        if (!target.classList.contains('gridCell') || this.state.field[coords[0]][coords[1]]) return\r\n\r\n        this.updateField(coords, (this.state.turn % 2)? \"cross\": \"circle\")\r\n        console.log(this.state.field) \r\n    }\r\n\r\n    locateTarget = (target) => {\r\n        let col = target.getAttribute('col')\r\n        let row = target.getAttribute('row')\r\n\r\n        return [parseInt(row), parseInt(col)]\r\n    }\r\n\r\n    updateField(coords, player){\r\n\r\n        if(this.state.winner !== \"no one\")return\r\n\r\n        let [row, col] = coords\r\n        let newField = [...this.state.field]\r\n        newField[row][col] = player\r\n\r\n        this.setState({\r\n            field: newField\r\n        })\r\n\r\n        let gameEnd = this.gameEnd()\r\n         if (gameEnd){\r\n            this.setState({\r\n                winner: player\r\n            })\r\n         }\r\n\r\n         this.setState({\r\n             turn: this.state.turn + 1\r\n         })\r\n\r\n        if (this.state.turn === this.state.axisLength ** 2 && this.state.winner === \"no one\"){\r\n             console.log(\"draw detected\")\r\n             this.onGameEnd()\r\n         }\r\n    }\r\n\r\n    gameEnd = () => {\r\n        let isGameEnd = this.isGameEnd()\r\n        if (isGameEnd){\r\n            console.log(this.state.victoryPath)\r\n            this.onGameEnd()\r\n            // the space is a problem, cause html doesn't allow trailing whitespace\r\n            // but \\xa0 can be inserted as whitespace, though\r\n\r\n            return true\r\n        }\r\n\r\n    }\r\n\r\n    onGameEnd(){\r\n        smoothRewrite(\"Game\" + \"\\xa0\" + \"End\", document.querySelector(\".gameHeader h3\"), 15)\r\n    }\r\n\r\n    isGameEnd = () => {\r\n        let victoryPath = this.state.victoryPath\r\n\r\n        if (this.state.turn < this.state.axisLength * 2 - 1) return false\r\n\r\n        let field = this.state.field\r\n        // check horizonal axes\r\n        for (let row of field){\r\n            if (this.isUniformAndComplete(row)){\r\n            victoryPath.push(...row)\r\n            return true\r\n         }\r\n        }\r\n        // check vertical axes\r\n\r\n        let transposedField = transpose(field)\r\n\r\n        for (let row of transposedField){\r\n            if (this.isUniformAndComplete(row)){\r\n            \r\n            victoryPath.push(...row)\r\n            return true\r\n            }\r\n        }\r\n\r\n        // check diagonal axes\r\n        \r\n        let backslashDiag = diag(field) \r\n        let slashDiag = this.getAntiDiagonal(field)\r\n\r\n        if (this.isUniformAndComplete(backslashDiag)){\r\n        \r\n            victoryPath.push(...backslashDiag)\r\n            return true\r\n        }\r\n        else if (this.isUniformAndComplete(slashDiag)){\r\n            victoryPath.push(...slashDiag)\r\n            return true\r\n        }\r\n\r\n    }\r\n\r\n    isUniform(array){\r\n        let firstEl = array[0]\r\n        for (let el of array){\r\n            if (el !== firstEl) return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    isIncomplete(array){\r\n        return (array.includes(null) || array.includes(undefined))\r\n    }\r\n\r\n    isUniformAndComplete(array){\r\n        return (this.isUniform(array) && !this.isIncomplete(array))\r\n    }\r\n\r\n    getAntiDiagonal(matrix){\r\n        let antiDiag = []\r\n        matrix.forEach((row, i) => antiDiag.push(row[row.length - (i + 1)]))\r\n\r\n        return antiDiag\r\n    }\r\n\r\n    increaseFieldSize = () => {\r\n        let axisLength = this.state.axisLength\r\n\r\n        if (axisLength >= this.fieldSizeLimitations.max)return\r\n\r\n        this.setState(this.generateInitialState(axisLength + 1))\r\n    }\r\n\r\n    decreaseFieldSize = () => {\r\n        let axisLength = this.state.axisLength\r\n\r\n        if (axisLength <= this.fieldSizeLimitations.min)return\r\n\r\n        this.setState(this.generateInitialState(axisLength - 1))\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setState({\r\n            ...this.props.ticTacToeState\r\n        })\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this.props.saveState(this.state)\r\n    }\r\n\r\n    render(){\r\n        let axisLength = this.state.axisLength\r\n        return(\r\n            <div id=\"game\" >\r\n        <div className=\"gameHeader\">\r\n            <h3 className=\"blue-text center\">{this.state.winner === \"no one\" && this.state.turn < 10 ? \"Tic Tac Toe\": \"Game End\"}</h3>\r\n            <p className=\"grey-text lighten-2\">Turn of Player\r\n            <i className=\"material-icons right black-text\">{this.state.turn % 2 ? \"close\":\"radio_button_unchecked\"}</i></p>\r\n        </div>\r\n        \r\n        <div id=\"field\" className=\"card\">\r\n            <div className=\"grid card-body\" onClick = {this.handleClick} style={{\r\n                gridTemplateColumns: `repeat(${axisLength}, 1fr)`,\r\n                gridTemplateRows: `repeat(${axisLength}, 1fr)`,}}>\r\n                    {this.createCells()}\r\n            </div>\r\n    \r\n            <div className=\"card-tabs\">\r\n                <ul className=\"tabs tabs-fixed-width game-controls\">\r\n                  <li className=\"tab\" onClick={() => this.setState(this.generateInitialState(this.state.axisLength))}><a className= \"active\" href=\"#\"><i className=\"material-icons\">refresh</i></a></li>\r\n                  <li className=\"tab\" onClick={this.decreaseFieldSize}title=\"Decrease Field Size\"><a className= {\"active\" + (this.state.axisLength == 3? ' disabled': '')}  href=\"#\"><i className=\"material-icons\">unfold_less</i></a></li>\r\n                  <li className=\"tab\" onClick={this.increaseFieldSize}title=\"Increase Field Size\"><a className={\"active\" + (this.state.axisLength == 5? ' disabled': '')} href=\"#\"><i className=\"material-icons\">unfold_more</i></a></li>\r\n                </ul>\r\n              </div>\r\n        </div>\r\n    </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        ticTacToeState: state.ticTacToeState\r\n    })\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        saveState: (state) => dispatch(saveState('ticTacToe', state))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TTT)","import React from 'react';\r\nimport {Component} from 'react'\r\nimport './App.css'\r\nimport Home from './components/Home'\r\nimport App from './todo-app/App' \r\nimport About from './components/About'\r\nimport Calculator from './components/Calculator'\r\nimport TTT from './components/tic-tac-toe'\r\nimport {BrowserRouter, Route} from 'react-router-dom'\r\nimport {Link, NavLink, withRouter} from 'react-router-dom'\r\n\r\nconst Todo = App\r\n\r\n// here's the main app, it will have three components:\r\n// 1. todo list # default\r\n// 2. calculator\r\n// 3. tic tac toe game \r\n// the components will be loaded on demand. we will use router for that \r\n// main app will have a navbar with NavLinks to all the componenents + NavLink to home\r\n// it also will contain table of contents filled with NavLinks to different components\r\n\r\nclass MainApp extends Component {\r\n\r\n  render(){\r\n    return (\r\n      <BrowserRouter>\r\n      <div className=\"App\">\r\n        \r\n        <nav>\r\n          <div className=\"nav-wrapper\">\r\n          <div className=\"container\">\r\n          <a href=\"#\" className=\"brand-logo\">Two Simple Apps<Link exact to = \"/tic-tac-toe\"><span className=\"new badge blue\" data-badge-caption=\"and a game\"></span></Link></a>\r\n            <ul className=\"right\">\r\n              <li><NavLink exact to=\"/\">Home</NavLink></li>\r\n              <li><NavLink to=\"/todo\">ToDo List</NavLink></li>\r\n              <li><NavLink to=\"/calculator\">Calculator</NavLink></li>\r\n              <li><NavLink to=\"/tic-tac-toe\">Tic Tac Toe</NavLink></li>\r\n              <li><NavLink to=\"/about\">About</NavLink></li>\r\n            </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n        <main>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/todo\" component={Todo} />\r\n          <Route path=\"/about\" component={About} />\r\n          <Route path=\"/calculator\" component={Calculator} />\r\n          <Route path=\"/tic-tac-toe\" component={TTT} />\r\n        </main>\r\n      </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainApp;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","// import { null } from \"mathjs\"\r\n\r\nconst initState = {\r\n    todoState: null,\r\n    calculatorState: null,\r\n    ticTacToeState: null,\r\n    dummyData: \"come and grab\"\r\n}\r\n\r\nconst rootReducer = (state = initState, action) => {\r\n    \r\n    if (action.type === 'SAVE_STATE'){\r\n        return {\r\n            ...state,\r\n            [action.componentName + 'State']: action.componentState\r\n        }\r\n    }\r\n\r\n    return state\r\n}  \r\n\r\n\r\nexport default rootReducer ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport {createStore} from  'redux'\r\nimport {Provider} from 'react-redux'\r\nimport rootReducer from './reducers/rootReducer'\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store = {store}> <App /> </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}